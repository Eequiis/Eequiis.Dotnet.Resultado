<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Eequiis.Dotnet.Resultado</name>
    </assembly>
    <members>
        <member name="T:Eequiis.Dotnet.Resultado.Exito">
            <summary>
            <para>Resultado exitoso de una operación cualquiera, que no devuelve nungún valor, como se indica en la clase
            <see cref="T:Eequiis.Dotnet.Resultado.Resultado"/>.</para>
            </summary>
        </member>
        <member name="M:Eequiis.Dotnet.Resultado.Exito.Cast``1(``0)">
            <summary>
            <para>A partir de este resultado, obtiene un resultado de éxito genérico, añadiendo un valor del tipo
            indicado.</para>
            <para>Este método crea, efectivamente, un nuevo objeto cuyo tipo es instancia de la platilla de clase
            genérica <see cref="T:Eequiis.Dotnet.Resultado.Exito`1"/>.</para>
            </summary>
            <typeparam name="T">Tipo del valor del resultado obtenido.</typeparam>
            <param name="valor">Valor del resultado genérico obtenido.</param>
            <returns>Un resultado exitoso genérico con el valor indicado asociado.</returns>
        </member>
        <member name="T:Eequiis.Dotnet.Resultado.Exito`1">
            <summary>
            <para>Resultado exitoso de una operación cualquiera, que devuelve un valor de tipo parametrizado.</para>
            </summary>
            <typeparam name="T">Tipo del valor devuelto por la operación exitosa.</typeparam>
        </member>
        <member name="M:Eequiis.Dotnet.Resultado.Exito`1.#ctor(`0)">
            <summary>
            <para>Construye un nuevo resultado exitoso, conteniendo un valor a devolver asociado.</para>
            </summary>
            <param name="valor">Valor asociado al resultado exitoso a construir.</param>
        </member>
        <member name="P:Eequiis.Dotnet.Resultado.Exito`1.Valor">
            <summary>
            <para>Obtiene el valor asociado a este resultado exitoso.</para>
            </summary>
        </member>
        <member name="T:Eequiis.Dotnet.Resultado.Fracaso">
            <summary>
            <para>Resultado de fracaso de una operación cualquiera, que no devuelve ningún valor, como se indica en la
            clase <see cref="T:Eequiis.Dotnet.Resultado.Resultado"/>.</para>
            </summary>
        </member>
        <member name="M:Eequiis.Dotnet.Resultado.Fracaso.#ctor(System.String)">
            <summary>
            <para>Construye un resultado de fracaso indicando la causa del mismo.</para>
            <para>Si la causa es no significativa (nula, vacía o blanca), se indidicará un mensaje genérico.</para>
            </summary>
            <param name="causa">Mensaje que indica la causa del fracaso.</param>
        </member>
        <member name="P:Eequiis.Dotnet.Resultado.Fracaso.Causa">
            <summary>
            <para>Obtiene el mensaje con la causa del fracaso en la operación que devuelve este resultado.</para>
            </summary>
        </member>
        <member name="M:Eequiis.Dotnet.Resultado.Fracaso.Cast``1">
            <summary>
            <para>A partir de este fracaso, obtiene un nuevo resultado de fracaso, pero en su versión genérica,
            manteniendo el mensaje de error original.</para>
            <para>Este método crea, efectivamente, un nuevo objeto cuyo tipo es instancia de la platilla genérica
            de clase <see cref="T:Eequiis.Dotnet.Resultado.Fracaso`1"/>.</para>
            </summary>
            <typeparam name="T">Tipo genérico del resultado obtenido.</typeparam>
            <returns>Un resultado de fracaso genérico, con el mensaje original asociado.</returns>
        </member>
        <member name="T:Eequiis.Dotnet.Resultado.Fracaso`1">
            <summary>
            <para>Resultado de fracaso de una operación cualquiera, cuya intención era devolver un valor del tipo
            parametrizado, pero que al fracasar, no devuelve ningún valor asociado, sino un mensaje de error.</para>
            </summary>
            <typeparam name="T">Tipo parametrizado del valor que debería haber sido devuelto por la operación si hubiera
            tenido éxito (ya que hereda de la clase parametrizada <see cref="T:Eequiis.Dotnet.Resultado.Resultado`1"/>).</typeparam>
        </member>
        <member name="M:Eequiis.Dotnet.Resultado.Fracaso`1.#ctor(System.String)">
            <summary>
            <para>Construye un resultado de fracaso parametrizado con un mensaje de error asociado indicando la cause
            del fracaso de la operación.</para>
            <para>Si la causa es no significativa (nula, vacía o blanca), se indidicará un mensaje genérico.</para>
            </summary>
            <param name="causa">Mensaje de error asociado a la causa del fracaso de la operación que devuelve
            el resultado.</param>
        </member>
        <member name="P:Eequiis.Dotnet.Resultado.Fracaso`1.Causa">
            <summary>
            <para>Obtiene el valor del mensaje de este fracaso, que indica la causa del mismo.</para>
            </summary>
        </member>
        <member name="T:Eequiis.Dotnet.Resultado.Resultado">
            <summary>
            <para>Representa el resultado de una operación que no devuelve ningún valor, y que solo indica si dicha
            operación se completó exitosamente, o si por el contrario fracasó.</para>
            <para>Para representar u resultado de éxito o fracaso, hay que instanciar las clases <see cref="T:Eequiis.Dotnet.Resultado.Exito"/> y
            <see cref="T:Eequiis.Dotnet.Resultado.Fracaso"/>, que heredan de esta. Sin embargo, del lado cliente, ambos tipos de resultado se pueden
            almacenar en variables de tipo <c>Resultado</c>, que provee métodos para comprobar el éxito o fracaso de la
            operación, lo que permitiría hacer <i>castings</i> con garantía de éxito.</para>
            <para>Las operaciones que devuelven valores booleanos que solo indican el éxito o fracaso de las mismas también
            deberían utilizar esta clase como tipo de retorno. Sin embargo, en caso de que una operación devuelva un valor
            booleano que no indica el éxito o fracaso de la misma, se recomienda el uso de la clase
            <see cref="T:Eequiis.Dotnet.Resultado.Resultado`1"/> genérica, instanciándola como <c>Resultado&lt;bool&gt;</c>.
            </para>
            </summary>
        </member>
        <member name="M:Eequiis.Dotnet.Resultado.Resultado.AsExito">
            <summary>
            <para>Obtiene una vista exitosa de este resultado.</para>
            <para>Si este resultado no es una instancia de <see cref="T:Eequiis.Dotnet.Resultado.Exito"/>, el método devolverá <c>null</c>.</para>
            </summary>
            <returns>Una vista exitosa de este resultado, o <c>null</c>.</returns>
        </member>
        <member name="M:Eequiis.Dotnet.Resultado.Resultado.AsFracaso">
            <summary>
            <para>Obtiene una vista de fracaso de este resultado.</para>
            <para>Si este resultado no es una instancia de <see cref="T:Eequiis.Dotnet.Resultado.Fracaso"/>, el método devolverá <c>null</c>.
            </para>
            </summary>
            <returns>Una vista de fracaso de este resultado, o <c>null</c>.</returns>
        </member>
        <member name="M:Eequiis.Dotnet.Resultado.Resultado.Get(System.Boolean,System.String)">
            <summary>
            <para>Obtiene un resultado, instancia de <see cref="T:Eequiis.Dotnet.Resultado.Exito"/> o de <see cref="T:Eequiis.Dotnet.Resultado.Fracaso"/>, en base a un valor
            o expresión booleanos y un mensaje de error.</para>
            <para>Si el valor booleano es <c>true</c>, se devolverá un resultado exitoso, mientras que si es
            <c>false</c>, se devolverá un resultado de fracaso, acompañado por el mensaje indicado. Y si el mensaje de
            error indicado no es significativo (nulo, vacío o blanco), se sustituirá por un mensaje genérico, como se
            indica en <see cref="M:Eequiis.Dotnet.Resultado.Fracaso.#ctor(System.String)"/>.</para>
            </summary>
            <param name="exito">Indica si el resultado a obtener es exitoso.</param>
            <param name="mensaje">Mensaje asociado en caso de que el resultado a construir sea de fracaso.</param>
            <returns>Un resultado de éxito o fracaso en función del valor booleano indicado.</returns>
        </member>
        <member name="T:Eequiis.Dotnet.Resultado.Resultado`1">
            <summary>
            <para>Representa el resultado de una operación que devuelve un valor del tipo parametrizado indicado.</para>
            <para>En caso de que la operación devuelva un valor booleano que solo indica el éxito o fracaso de la misma, o
            que no devuelva ningún valor (<c>void</c>), se recomienda el uso de la clase <see cref="T:Eequiis.Dotnet.Resultado.Resultado"/> no
            genérica.</para>
            </summary>
            <typeparam name="T">Tipo del valor devuelto por la operación.</typeparam>
        </member>
        <member name="M:Eequiis.Dotnet.Resultado.Resultado`1.AsExito">
            <summary>
            <para>Obtiene una vista exitosa de este resultado.</para>
            <para>Si este resultado no es una instancia de <see cref="T:Eequiis.Dotnet.Resultado.Exito`1"/>, el método devolverá <c>null</c>.
            </para>
            </summary>
            <returns>Una vista exitosa de este resultado, o <c>null</c>.</returns>
        </member>
        <member name="M:Eequiis.Dotnet.Resultado.Resultado`1.AsFracaso">
            <summary>
            <para>Obtiene una vista de fracaso de este resultado.</para>
            <para>Si este resultado no es una instancia de <see cref="T:Eequiis.Dotnet.Resultado.Fracaso`1"/>, el método devolverá <c>null</c>.
            </para>
            </summary>
            <returns>Una vista de fracaso del resultado, o <c>null</c>.</returns>
        </member>
        <member name="M:Eequiis.Dotnet.Resultado.Resultado`1.Get(`0,System.Predicate{`0},System.String)">
            <summary>
            <para>Obtiene un resultado, instancia de <see cref="T:Eequiis.Dotnet.Resultado.Exito`1"/> o de <see cref="T:Eequiis.Dotnet.Resultado.Fracaso`1"/>, en base a
            un valor de un tipo parametrizado, una condición parametrizada y un mensaje de error.</para>
            <para>Si la condición parametrizada es cierta, se devolverá un resultado parametrizado exitoso conteniendo
            el valor de tipo parametrizado indicado, mientras que si es falsa se devolverá un resultado parametrizado
            de fracaso, acompañado por el mensaje de error indicado. Y si el mensaje de error indicado no es
            significativo (nulo, vacío o blanco), se sustituirá por un mensaje genérico, como se indica en
            <see cref="M:Eequiis.Dotnet.Resultado.Fracaso`1.#ctor(System.String)"/>.</para>
            </summary>
            <param name="valor">Valor devuleto por una operación en el resultado construido, en caso de éxito.</param>
            <param name="exito">Condición de tipo parametrizado que indica en qué caso el resultado es exitoso.</param>
            <param name="mensaje">Mensaje asociado en caso de que el resultado obtenido sea de fracaso.</param>
            <returns>Un resultado parametrizado, de éxito o fracaso, en función de la condición indicada.</returns>
        </member>
        <member name="T:Eequiis.Dotnet.Resultado.TResultado">
            <summary>
            <para>Representa el resultado de una operación cualquiera, que puede ser de éxito o fracaso.</para>
            <para>Para comprobar si un resultado ha sido de éxito disponemos de la propiedad de solo lectura
            <see cref="P:Eequiis.Dotnet.Resultado.TResultado.EsExito"/>, y también de <see cref="P:Eequiis.Dotnet.Resultado.TResultado.EsCorrecto"/>, siendo la última una propiedad obsoleta,
            manetnida por retro compatibilidad, pero su uso se debería evitar.</para>
            <para>De igual forma, para comprobar si el resuoltado es de fracaso, tenemos la propiedad de solo lectura
            <see cref="P:Eequiis.Dotnet.Resultado.TResultado.EsFracaso"/>, y la obsoleta <see cref="P:Eequiis.Dotnet.Resultado.TResultado.EsError"/>.</para>
            <para><i>Nota: las propiedades obsoletas son consistentes con sus análogas actuales. Es decir, la propiedad
            <c>EsCorrecto</c> devolverá el mismo valor booleano que <c>EsExito</c>; e igualmente, <c>EsError</c> devolverá
            lo mismo que <c>EsFracaso</c>.</i></para>
            </summary>
        </member>
        <member name="P:Eequiis.Dotnet.Resultado.TResultado.EsCorrecto">
            <summary>
            <para>Indica si la operación que devuelve este resultado se ha realizado con éxito, es decir, de manera
            correcta.</para>
            </summary>
        </member>
        <member name="P:Eequiis.Dotnet.Resultado.TResultado.EsExito">
            <summary>
            <para>Indica si la operación que devuelve este resultado se ha realizado exitosamente.</para>
            </summary>
        </member>
        <member name="P:Eequiis.Dotnet.Resultado.TResultado.EsError">
            <summary>
            <para>Indica si la operación que devuelve este resultado ha fracasado, es decir, si ha fallado durante
            la ejecución.</para>
            </summary>
        </member>
        <member name="P:Eequiis.Dotnet.Resultado.TResultado.EsFracaso">
            <summary>
            <para>Indica si la operación que devuelve este resultado ha fracasado.</para>
            </summary>
        </member>
    </members>
</doc>
